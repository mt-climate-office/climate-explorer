shiny::runApp('app/app')
shiny::runApp('app/app')
shiny::runApp('app/app')
runApp('app/app')
runApp('app/app')
runApp('app/app')
runApp('app/app')
runApp('app/app')
shiny::runApp('app/app')
runApp('app/app')
runApp('app/app')
list.files("./app/app/data", pattern = ".tif", full.names = T) %>%
tibble::tibble(f = .) %>%
dplyr::mutate(name = basename(f) %>%
tools::file_path_sans_ext()) %>%
tidyr::separate(name, c("variable", "scenario", "period"), sep = "_") %>%
dplyr::mutate(
mn = terra::rast(f) %>% terra::global("min") %>% magrittr::extract2(1),
mx = terra::rast(f) %>% terra::global("max") %>% magrittr::extract2(1)
) %>%
dplyr::group_by(variable) %>%
dplyr::summarize(mn = min(mn), mx = max(mx)) %>%
dplyr::filter(
variable %in% c("penman", "pr", "sfcWind", "tas", "tasmax", "tasmin")
) %>%
dplyr::mutate(
mn = dplyr::case_when(
variable == "penman" ~ mn / 25.4,
variable == "pr" ~ mn / 25.4,
variable == "sfcWind" ~ mn * 2.237,
TRUE ~ (mn - 273.15) * 1.8 + 32
),
mx = dplyr::case_when(
variable == "penman" ~ mx / 25.4,
variable == "pr" ~ mx / 25.4,
variable == "sfcWind" ~ mx * 2.237,
TRUE ~ (mx - 273.15) * 1.8 + 32
)
)
list.files("./app/app/data", pattern = ".tif", full.names = T) %>%
tibble::tibble(f = .) %>%
dplyr::mutate(name = basename(f) %>%
tools::file_path_sans_ext()) %>%
tidyr::separate(name, c("variable", "scenario", "period"), sep = "_") %>%
dplyr::mutate(
mn = terra::rast(f) %>% terra::global("min") %>% magrittr::extract2(1),
mx = terra::rast(f) %>% terra::global("max") %>% magrittr::extract2(1)
) %>%
dplyr::group_by(variable) %>%
dplyr::summarize(mn = min(mn), mx = max(mx)) %>%
dplyr::filter(
variable %in% c("penman", "pr", "sfcWind", "tas", "tasmax", "tasmin")
) %>%
dplyr::mutate(
mn = dplyr::case_when(
variable == "penman" ~ mn / 25.4,
variable == "pr" ~ mn / 25.4,
variable == "sfcWind" ~ mn * 2.237,
TRUE ~ (mn - 273.15) * 1.8 + 32
),
mx = dplyr::case_when(
variable == "penman" ~ mx / 25.4,
variable == "pr" ~ mx / 25.4,
variable == "sfcWind" ~ mx * 2.237,
TRUE ~ (mx - 273.15) * 1.8 + 32
)
) %>%
readr::write_csv("./app/app/data/legend.csv")
runApp('app/app')
runApp('app/app')
setwd("./app/app")
legend_info <- readr::read_csv("./data/legend.csv")
legend_info
runApp()
v = "tas"
legend_info %>%
dplyr::filter(variable == "tas")
vals <- legend_info %>%
dplyr::filter(variable == "tas")
pal <- colorNumeric(c("red", "green", "blue"), 1:10)
pal
pal(1)
floor(2.7)
ceil(2.2)
ceiling(2.2)
vals <- legend_info %>%
dplyr::filter(variable == "tas")
pal <- colorNumeric(
palette = "YlGnBu",
domain = floor(vals$mn):ceiling(vals$mx)
)
pal
vals <- legend_info %>%
dplyr::filter(variable == "tas")
mn <- floor(vals$mn)
mx <- ceiling(vals$mx)
vals
mn
mx
?colorNumeric
seq(mn, mx, length.out=10)
runApp()
pal <- colorNumeric(
palette = "YlGnBu",
domain = mn:mx
)
breaks = seq(mn, mx, length.out=10)
round(seq(mn, mx, length.out=10))
pal(breaks)
runApp()
leaflet::leaflet() %>% leaflet::addTiles() %>%
addLegend(position = "bottomleft") %>%
addLegend("bottomleft", layerId="colorLegend", colors = pal(breaks), labels = round(seq(mn, mx, length.out=10)))
runApp()
list.files("./app/app/data", pattern = ".tif", full.names = T) %>%
tibble::tibble(f = .) %>%
dplyr::mutate(name = basename(f) %>%
tools::file_path_sans_ext()) %>%
tidyr::separate(name, c("variable", "scenario", "period"), sep = "_") %>%
dplyr::mutate(
mn = terra::rast(f) %>% terra::global("min") %>% magrittr::extract2(1),
mx = terra::rast(f) %>% terra::global("max") %>% magrittr::extract2(1)
) %>%
dplyr::group_by(variable) %>%
dplyr::summarize(mn = min(mn), mx = max(mx)) %>%
dplyr::filter(
variable %in% c("penman", "pr", "sfcWind", "tas", "tasmax", "tasmin")
) %>%
readr::write_csv("./app/app/data/legend.csv")
setwd("../..")
list.files("./app/app/data", pattern = ".tif", full.names = T) %>%
tibble::tibble(f = .) %>%
dplyr::mutate(name = basename(f) %>%
tools::file_path_sans_ext()) %>%
tidyr::separate(name, c("variable", "scenario", "period"), sep = "_") %>%
dplyr::mutate(
mn = terra::rast(f) %>% terra::global("min") %>% magrittr::extract2(1),
mx = terra::rast(f) %>% terra::global("max") %>% magrittr::extract2(1)
) %>%
dplyr::group_by(variable) %>%
dplyr::summarize(mn = min(mn), mx = max(mx)) %>%
dplyr::filter(
variable %in% c("penman", "pr", "sfcWind", "tas", "tasmax", "tasmin")
) %>%
readr::write_csv("./app/app/data/legend.csv")
?cd
ls
ls()
ll
cd
pwd
list.files("./app/app/data", pattern = ".tif", full.names = T) %>%
tibble::tibble(f = .) %>%
dplyr::mutate(name = basename(f) %>%
tools::file_path_sans_ext()) %>%
tidyr::separate(name, c("variable", "scenario", "period"), sep = "_") %>%
dplyr::mutate(
mn = terra::rast(f) %>% terra::global("min") %>% magrittr::extract2(1),
mx = terra::rast(f) %>% terra::global("max") %>% magrittr::extract2(1)
) %>%
dplyr::group_by(variable) %>%
dplyr::summarize(mn = min(mn), mx = max(mx)) %>%
dplyr::filter(
variable %in% c("penman", "pr", "sfcWind", "tas", "tasmax", "tasmin")
) %>%
readr::write_csv("./app/app/data/legend.csv")
runApp('app/app')
legend_info <- readr::read_csv("./data/legend.csv")
setwd("./app/app")
vals <- legend_info %>%
dplyr::filter(variable == "tas")
mn <- floor(vals$mn)
mx <- ceiling(vals$mx)
mn
mx
r <- glue::glue(
"https://data.climate.umt.edu/mca/cmip/derived/{input$variable}_{input$scenario}_{input$reference}.tif"
)
r <- glue::glue(
"https://data.climate.umt.edu/mca/cmip/derived/{input$variable}_{input$scenario}_{input$reference}.tif"
)
runApp()
runApp()
r = 'https://data.climate.umt.edu/mca/cmip/derived/penman_ssp126_end.tif'
vals <- legend_info %>%
dplyr::filter(variable == "tas")
mn <- floor(vals$mn)
mx <- ceiling(vals$mx)
vals <- legend_info %>%
dplyr::filter(variable == "tas")
mn <- floor(vals$mn)
mx <- ceiling(vals$mx)
terra::rast(r) %>% terra::values()
runApp()
r
print(r)
vals <- legend_info %>%
dplyr::filter(variable == input$variable)
vals
vals <- legend_info %>%
dplyr::filter(variable == 'penman')
mn <- floor(vals$mn)
mx <- ceiling(vals$mx)
pal <- colorNumeric(
palette = "YlGnBu",
domain = mn:mx
)
breaks = seq(mn, mx, length.out=10)
breaks
terra::rast(r) %>% terra::values()
runApp()
print(r)
vals <- legend_info %>%
dplyr::filter(variable == "penman")
mn <- floor(vals$mn)
mx <- ceiling(vals$mx)
pal <- colorNumeric(
palette = "YlGnBu",
domain = mn:mx
)
breaks = seq(mn, mx, length.out=10)
print(terra::rast(r) %>% terra::values() %in% mn:mx)
mn:mx
terra::rast(r) %>% terra::values()
shiny::runApp('app/app')
